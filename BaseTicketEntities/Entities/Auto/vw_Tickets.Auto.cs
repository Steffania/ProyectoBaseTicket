
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.3.0
// Created: 21/10/2018 - 11:03 p. m.
// This is a partial class file. The other one is vw_TicketsEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using BaseTicketRules.Objects;

using BaseTicketRules.Objects.sys;


using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace BaseTicketRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class vw_Tickets : Objects.vw_TicketsObject, IMappeablevw_Tickets, IEquatable<vw_Tickets>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public vw_Tickets()
            :base()
        {
            
        }

        

        

        /// <summary>
        /// 
        /// </summary>
        public vw_Tickets(
			System.Int32 TicketId,
			System.String Numero,
			System.String Nombre,
			System.String Apellido,
			System.String Telefono,
			System.String Email,
			System.DateTime FechaTicket,
			System.String Descripcion,
			System.String Area)
            : base()
        {

			_TicketId = TicketId;
			_Numero = Numero;
			_Nombre = Nombre;
			_Apellido = Apellido;
			_Telefono = Telefono;
			_Email = Email;
			_FechaTicket = FechaTicket;
			_Descripcion = Descripcion;
			_Area = Area;

            
            Initialized();
        }
        
        #endregion

        #region "Fields"

        
        #endregion

        #region "Properties"
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new vw_Tickets OriginalValue()
        {
            return (vw_Tickets)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            vw_Tickets newObject;            
            

            newObject = (vw_Tickets)this.MemberwiseClone();
            // Entities
            
            // Colections
            
            // OriginalValue
            vw_Tickets newOriginalValue;
            if (base.InternalOriginalValue != null)
            {
                newOriginalValue = (vw_Tickets)this.OriginalValue().MemberwiseClone();
                // Entities
                
                // Colections
                            
                newObject.InternalOriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeablevw_Tickets.CompleteEntity()
        {
        
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeablevw_Tickets.SetFKValuesForChilds(vw_Tickets entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(vw_Tickets other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeablevw_Tickets
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(vw_Tickets entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class vw_TicketsList : ObjectList<vw_Tickets>
    {
    }
}
namespace BaseTicketRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class vw_TicketsListView
        : ObjectListView<Entities.vw_Tickets>
    {
        /// <summary>
        /// 
        /// </summary>
        public vw_TicketsListView(Entities.vw_TicketsList list): base(list)
        {
        }
    }
}


