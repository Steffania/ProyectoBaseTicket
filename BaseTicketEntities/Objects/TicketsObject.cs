
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.3.0
// Created: 20/10/2018 - 12:37 p. m.
// This is a partial class file. The other one is TicketsObject.Auto.cs
// You can edit this file as your wish.
//------------------------------------------------------------------------------

using System;
using Cooperator.Framework.Core;
using Cooperator.Framework.Core.Exceptions;

namespace BaseTicketRules.Objects
{
    /// <summary>
    /// This class represents a Object of Tickets table.
    /// </summary>
    [Serializable]
    public partial class TicketsObject
        // : IValidable
    {

        /// <summary>
        /// Called from class constructor.
        /// </summary>
        protected override void Initialize()
        {
        }

        // /// <summary>
        // /// Called after parameterized constructor. 
        // /// </summary>
        // protected override void Initialized()
        // {       
        // //Warnging: This method is only called by parameterized contructors.
        // }

        // /// <summary>
        // /// When IValidable is implemented, this method is invoked by Gateway before Insert or Update to validate Object.
        // /// </summary>
        // public void Validate()
        // {
        //     string msgRequired = "{0} can't be null";
        //     string msgOutOfRange = "{0} incorrect value";

        //     if (string.IsNullOrEmpty(this.Numero)) throw new RuleValidationException(string.Format(msgRequired, "Numero"));
        //     if (this.AreaId <= 0) throw new RuleValidationException(string.Format(msgOutOfRange, "AreaId"));
        //     if (string.IsNullOrEmpty(this.Nombre)) throw new RuleValidationException(string.Format(msgRequired, "Nombre"));
        //     if (string.IsNullOrEmpty(this.Apellido)) throw new RuleValidationException(string.Format(msgRequired, "Apellido"));
        //     if (string.IsNullOrEmpty(this.Telefono)) throw new RuleValidationException(string.Format(msgRequired, "Telefono"));
        //     if (string.IsNullOrEmpty(this.Email)) throw new RuleValidationException(string.Format(msgRequired, "Email"));
        //     if (string.IsNullOrEmpty(this.Descripcion)) throw new RuleValidationException(string.Format(msgRequired, "Descripcion"));
        
        // }
    }

    /// <summary>
    /// This class represents a record set of Tickets table.
    /// </summary>
    public partial class TicketsObjectList
    {
         // /// <summary>
         // /// Returns a typed Dataset based on its content.
         // /// </summary>
         // public override System.Data.DataSet ToDataSet()
         // {
         //    YOUR_TYPED_DATASET MyDataSet = new YOUR_TYPED_DATASET();
         //    ObjectListHelper<TicketsObject, TicketsObjectList> Exporter = new ObjectListHelper<TicketsObject, TicketsObjectList>();
         //    Exporter.FillDataSet(MyDataSet, this);
         //    return MyDataSet;
         // }
    }
}

namespace BaseTicketRules.Views
{
    /// <summary>
    /// This class represents a view of an collection of TicketsObjects.
    /// </summary>
    public partial class TicketsObjectListView
    {
    }
}


