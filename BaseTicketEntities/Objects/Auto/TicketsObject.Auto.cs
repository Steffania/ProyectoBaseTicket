
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.3.0
// Created: 22/10/2018 - 09:11 a. m.
// This is a partial class file. The other one is TicketsObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace BaseTicketRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class TicketsObject : BaseObject, IMappeableTicketsObject, IUniqueIdentifiable, IEquatable<TicketsObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public TicketsObject(): base()
        {

			_TicketId =  ValuesGenerator.GetInt32;

        }

        
        /// <summary>
        /// 
        /// </summary>
        public TicketsObject(
			System.Int32 TicketId): base()
        {

			_TicketId = TicketId;

            Initialized();
        }
        

        
        /// <summary>
        /// 
        /// </summary>
        public TicketsObject(
			System.Int32 TicketId,
			System.String Numero,
			System.Int32 AreaId,
			System.String Nombre,
			System.String Apellido,
			System.String Telefono,
			System.String Email,
			System.DateTime FechaTicket,
			System.String Descripcion): base()
        {

			_TicketId = TicketId;
			_Numero = Numero;
			_AreaId = AreaId;
			_Nombre = Nombre;
			_Apellido = Apellido;
			_Telefono = Telefono;
			_Email = Email;
			_FechaTicket = FechaTicket;
			_Descripcion = Descripcion;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _TicketId;
/// <summary>
/// 
/// </summary>
protected System.String _Numero;
/// <summary>
/// 
/// </summary>
protected System.Int32 _AreaId;
/// <summary>
/// 
/// </summary>
protected System.String _Nombre;
/// <summary>
/// 
/// </summary>
protected System.String _Apellido;
/// <summary>
/// 
/// </summary>
protected System.String _Telefono;
/// <summary>
/// 
/// </summary>
protected System.String _Email;
/// <summary>
/// 
/// </summary>
protected System.DateTime _FechaTicket;
/// <summary>
/// 
/// </summary>
protected System.String _Descripcion;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 TicketId
        {
            get
            {
                return _TicketId;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Numero
        {
            get
            {
                return _Numero;
            }
            
            set
            {
                base.PropertyModified();
                _Numero = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 AreaId
        {
            get
            {
                return _AreaId;
            }
            
            set
            {
                base.PropertyModified();
                _AreaId = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            
            set
            {
                base.PropertyModified();
                _Nombre = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Apellido
        {
            get
            {
                return _Apellido;
            }
            
            set
            {
                base.PropertyModified();
                _Apellido = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Telefono
        {
            get
            {
                return _Telefono;
            }
            
            set
            {
                base.PropertyModified();
                _Telefono = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Email
        {
            get
            {
                return _Email;
            }
            
            set
            {
                base.PropertyModified();
                _Email = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.DateTime FechaTicket
        {
            get
            {
                return _FechaTicket;
            }
            
            set
            {
                base.PropertyModified();
                _FechaTicket = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            
            set
            {
                base.PropertyModified();
                _Descripcion = value;
                
            }
            
        }
        
        #endregion

                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base.InternalOriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            TicketsObject newObject;
            TicketsObject newOriginalValue;

            newObject = (TicketsObject) this.MemberwiseClone();
            if (base.InternalOriginalValue != null)
            {
                newOriginalValue = (TicketsObject)this.OriginalValue().MemberwiseClone();
                newObject.InternalOriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new TicketsObject OriginalValue()
        {
            return (TicketsObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableTicketsObject.HydrateFields(
			System.Int32 TicketId,
			System.String Numero,
			System.Int32 AreaId,
			System.String Nombre,
			System.String Apellido,
			System.String Telefono,
			System.String Email,
			System.DateTime FechaTicket,
			System.String Descripcion)
        {
        	_TicketId = TicketId;
			_Numero = Numero;
			_AreaId = AreaId;
			_Nombre = Nombre;
			_Apellido = Apellido;
			_Telefono = Telefono;
			_Email = Email;
			_FechaTicket = FechaTicket;
			_Descripcion = Descripcion;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableTicketsObject.GetFieldsForInsert()
        {
        
        
            object[] _myArray = new object[9];
            _myArray[0] = _TicketId;
			_myArray[1] = _Numero;
			_myArray[2] = _AreaId;
			_myArray[3] = _Nombre;
			_myArray[4] = _Apellido;
			_myArray[5] = _Telefono;
			_myArray[6] = _Email;
			_myArray[7] = _FechaTicket;
			_myArray[8] = _Descripcion;
			
            return _myArray;
        
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableTicketsObject.GetFieldsForUpdate()
        {
        
        
            
            object[] _myArray = new object[9];
            _myArray[0] = _TicketId;
			_myArray[1] = _Numero;
			_myArray[2] = _AreaId;
			_myArray[3] = _Nombre;
			_myArray[4] = _Apellido;
			_myArray[5] = _Telefono;
			_myArray[6] = _Email;
			_myArray[7] = _FechaTicket;
			_myArray[8] = _Descripcion;
			
            return _myArray;
        
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableTicketsObject.GetFieldsForDelete()
        {
        
            object[] _myArray = new object[1];
            _myArray[0] = _TicketId;
			
            return _myArray;
        
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableTicketsObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _TicketId = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            TicketsObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.TicketId};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(TicketsObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableTicketsObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 TicketId, 
			System.String Numero, 
			System.Int32 AreaId, 
			System.String Nombre, 
			System.String Apellido, 
			System.String Telefono, 
			System.String Email, 
			System.DateTime FechaTicket, 
			System.String Descripcion);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class TicketsObjectList : ObjectList<TicketsObject>
    {
    }
}

namespace BaseTicketRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class TicketsObjectListView
        : ObjectListView<Objects.TicketsObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public TicketsObjectListView(Objects.TicketsObjectList list): base(list)
        {
        }
    }
}


