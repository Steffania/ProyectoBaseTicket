
        
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.3.0
// Created: 22/10/2018 - 09:11 a. m.
// You can edit this file as your wish.
//------------------------------------------------------------------------------

using System;
using Cooperator.Framework.Data;
using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using BaseTicketRules.Entities;

using BaseTicketRules.Entities.sys;

using BaseTicketRules.Objects;

using BaseTicketRules.Objects.sys;

using BaseTicketRules.Gateways;

using BaseTicketRules.Gateways.sys;

using BaseTicketRules.Mappers;

using BaseTicketRules.Mappers.sys;

using System.Collections.Generic;

namespace BaseTicketRules.LazyProviders
{
    /// <summary>
    /// 
    /// </summary>
    public class DefaultLazyProvider: ILazyProvider
    {
        private static Object thisLock = new Object();
        private static Dictionary<string, IGenericGateway> _mappersCache;
        private static Dictionary<string, IGenericGateway> MappersCache
        {
            get
            {
                lock (thisLock)
                {
                    if (DefaultLazyProvider._mappersCache == null)
                    {
                        DefaultLazyProvider._mappersCache = new Dictionary<string, IGenericGateway>();
                        
                        DefaultLazyProvider._mappersCache.Add("BaseTicketRules.Entities.Area", BaseTicketRules.Mappers.AreaMapper.Instance());
                        
                        DefaultLazyProvider._mappersCache.Add("BaseTicketRules.Objects.AreaObject", BaseTicketRules.Gateways.AreaGateway.Instance());
                    
                        DefaultLazyProvider._mappersCache.Add("BaseTicketRules.Entities.Tickets", BaseTicketRules.Mappers.TicketsMapper.Instance());
                        
                        DefaultLazyProvider._mappersCache.Add("BaseTicketRules.Objects.TicketsObject", BaseTicketRules.Gateways.TicketsGateway.Instance());
                    
                    }
                }
                return DefaultLazyProvider._mappersCache;
            }
        }    


        /// <summary>
        /// Get associated entity for this entity
        /// </summary>
        public IUniqueIdentifiable GetEntity(System.Type child, IUniqueIdentifiable identifier)
        {
            IGenericGateway genericGateway = DefaultLazyProvider.MappersCache[child.FullName];
            return genericGateway.GetOne(identifier) as IUniqueIdentifiable;
        }

        /// <summary>
        /// Get collection based in the parent entity
        /// </summary>
        public object GetList(System.Type child, IUniqueIdentifiable parent)
        {
            IGenericGateway genericGateway = DefaultLazyProvider.MappersCache[child.FullName];
            return genericGateway.GetByParent(parent);
        }
    }
}


